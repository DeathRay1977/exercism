(binding [*ns* (or (find-ns 'beer-song-test) (find-ns 'user))] (load-string "(ns beer-song-test
  (:require [clojure.test :refer :all]))
(load-file \"beer_song.clj\")
(def verse-8 \"8 bottles of beer on the wall, 8 bottles of beer.\nTake one down and pass it around, 7 bottles of beer on the wall.\n\")
(def verse-2 \"2 bottles of beer on the wall, 2 bottles of beer.\nTake one down and pass it around, 1 bottle of beer on the wall.\n\")
(def verse-1 \"1 bottle of beer on the wall, 1 bottle of beer.\nTake it down and pass it around, no more bottles of beer on the wall.\n\")
(def verse-0 \"No more bottles of beer on the wall, no more bottles of beer.\nGo to the store and buy some more, 99 bottles of beer on the wall.\n\")
(def song-8-6 \"8 bottles of beer on the wall, 8 bottles of beer.\nTake one down and pass it around, 7 bottles of beer on the wall.\n\n7 bottles of beer on the wall, 7 bottles of beer.\nTake one down and pass it around, 6 bottles of beer on the wall.\n\n6 bottles of beer on the wall, 6 bottles of beer.\nTake one down and pass it around, 5 bottles of beer on the wall.\n\")
(def song-3-0 \"3 bottles of beer on the wall, 3 bottles of beer.\nTake one down and pass it around, 2 bottles of beer on the wall.\n\n2 bottles of beer on the wall, 2 bottles of beer.\nTake one down and pass it around, 1 bottle of beer on the wall.\n\n1 bottle of beer on the wall, 1 bottle of beer.\nTake it down and pass it around, no more bottles of beer on the wall.\n\nNo more bottles of beer on the wall, no more bottles of beer.\nGo to the store and buy some more, 99 bottles of beer on the wall.\n\")
(deftest test-verse
  (is (= verse-8 (beer-song/verse 8)))
  (is (= verse-2 (beer-song/verse 2)))
  (is (= verse-1 (beer-song/verse 1)))
  (is (= verse-0 (beer-song/verse 0))))
(deftest test-song
  (is (= song-8-6 (beer-song/sing 8 6)))
  (is (= song-3-0 (beer-song/sing 3))))
(run-tests)"))
(load-string "nREPL server started on port 60212 on host 127.0.0.1 - nrepl://127.0.0.1:60212
REPL-y 0.3.5, nREPL 0.2.6
Clojure 1.6.0
Java HotSpot(TM) 64-Bit Server VM 1.8.0_45-b14
    Docs: (doc function-name-here)
          (find-doc \"part-of-name-here\")
  Source: (source function-name-here)
 Javadoc: (javadoc java-object-or-class-here)
    Exit: Control+D or (exit) or (quit)
 Results: Stored in vars *1, *2, *3, an exception in *e
user=> (binding [*ns* (or (find-ns 'beer-song-test) (find-ns 'user))] (load-stri 
ng \"(ns beer-song-test
  #_=>   (:require [clojure.test :refer :all]))
  #_=> 
  #_=> (load-file \\"beer_song.clj\\")
  #_=> 
  #_=> (def verse-8 \\"8 bottles of beer on the wall, 8 bottles of beer.\nTake on 
e down and pass it around, 7 bottles of beer on the wall.\n\\")
  #_=> (def verse-2 \\"2 bottles of beer on the wall, 2 bottles of beer.\nTake on 
e down and pass it around, 1 bottle of beer on the wall.\n\\")
  #_=> (def verse-1 \\"1 bottle of beer on the wall, 1 bottle of beer.\nTake it d 
own and pass it around, no more bottles of beer on the wall.\n\\")
  #_=> (def verse-0 \\"No more bottles of beer on the wall, no more bottles of be 
er.\nGo to the store and buy some more, 99 bottles of beer on the wall.\n\\")
  #_=> 
  #_=> (def song-8-6 \\"8 bottles of beer on the wall, 8 bottles of beer.\nTake o 
ne down and pass it around, 7 bottles of beer on the wall.\n\n7 bottles of beer  
on the wall, 7 bottles of beer.\nTake one down and pass it around, 6 bottles of  
beer on the wall.\n\n6 bottles of beer on the wall, 6 bottles of beer.\nTake one 
 down and pass it around, 5 bottles of beer on the wall.\n\\")
  #_=> (def song-3-0 \\"3 bottles of beer on the wall, 3 bottles of beer.\nTake o 
ne down and pass it around, 2 bottles of beer on the wall.\n\n2 bottles of beer  
on the wall, 2 bottles of beer.\nTake one down and pass it around, 1 bottle of b 
eer on the wall.\n\n1 bottle of beer on the wall, 1 bottle of beer.\nTake it dow 
n and pass it around, no more bottles of beer on the wall.\n\nNo more bottles of 
 beer on the wall, no more bottles of beer.\nGo to the store and buy some more,  
99 bottles of beer on the wall.\n\\")
  #_=> 
  #_=> (deftest test-verse
  #_=>   (is (= verse-8 (beer-song/verse 8)))
  #_=>   (is (= verse-2 (beer-song/verse 2)))
  #_=>   (is (= verse-1 (beer-song/verse 1)))
  #_=>   (is (= verse-0 (beer-song/verse 0))))
  #_=> 
  #_=> (deftest test-song
  #_=>   (is (= song-8-6 (beer-song/sing 8 6)))
  #_=>   (is (= song-3-0 (beer-song/sing 3))))
  #_=> 
  #_=> (run-tests)\"))
CompilerException java.io.FileNotFoundException: beer_song.clj (No such file or directory), compiling:(null:2:41) 
user=> nREPL server started on port 60212 on host 127.0.0.1 - nrepl://127.0.0.1:60212
REPL-y 0.3.5, nREPL 0.2.6
Clojure 1.6.0
Java HotSpot(TM) 64-Bit Server VM 1.8.0_45-b14
    Docs: (doc function-name-here)
          (find-doc \"part-of-name-here\")
  Source: (source function-name-here)
 Javadoc: (javadoc java-object-or-class-here)
    Exit: Control+D or (exit) or (quit)
 Results: Stored in vars *1, *2, *3, an exception in *e
user=> (binding [*ns* (or (find-ns 'beer-song-test) (find-ns 'user))] (load-stri 
ng \"(ns beer-song-test
  #_=>   (:require [clojure.test :refer :all]))
  #_=> 
  #_=> (load-file \\"beer_song.clj\\")
  #_=> 
  #_=> (def verse-8 \\"8 bottles of beer on the wall, 8 bottles of beer.\nTake on 
e down and pass it around, 7 bottles of beer on the wall.\n\\")
  #_=> (def verse-2 \\"2 bottles of beer on the wall, 2 bottles of beer.\nTake on 
e down and pass it around, 1 bottle of beer on the wall.\n\\")
  #_=> (def verse-1 \\"1 bottle of beer on the wall, 1 bottle of beer.\nTake it d 
own and pass it around, no more bottles of beer on the wall.\n\\")
  #_=> (def verse-0 \\"No more bottles of beer on the wall, no more bottles of be 
er.\nGo to the store and buy some more, 99 bottles of beer on the wall.\n\\")
  #_=> 
  #_=> (def song-8-6 \\"8 bottles of beer on the wall, 8 bottles of beer.\nTake o 
ne down and pass it around, 7 bottles of beer on the wall.\n\n7 bottles of beer  
on the wall, 7 bottles of beer.\nTake one down and pass it around, 6 bottles of  
beer on the wall.\n\n6 bottles of beer on the wall, 6 bottles of beer.\nTake one 
 down and pass it around, 5 bottles of beer on the wall.\n\\")
  #_=> (def song-3-0 \\"3 bottles of beer on the wall, 3 bottles of beer.\nTake o 
ne down and pass it around, 2 bottles of beer on the wall.\n\n2 bottles of beer  
on the wall, 2 bottles of beer.\nTake one down and pass it around, 1 bottle of b 
eer on the wall.\n\n1 bottle of beer on the wall, 1 bottle of beer.\nTake it dow 
n and pass it around, no more bottles of beer on the wall.\n\nNo more bottles of 
 beer on the wall, no more bottles of beer.\nGo to the store and buy some more,  
99 bottles of beer on the wall.\n\\")
  #_=> 
  #_=> (deftest test-verse
  #_=>   (is (= verse-8 (beer-song/verse 8)))
  #_=>   (is (= verse-2 (beer-song/verse 2)))
  #_=>   (is (= verse-1 (beer-song/verse 1)))
  #_=>   (is (= verse-0 (beer-song/verse 0))))
  #_=> 
  #_=> (deftest test-song
  #_=>   (is (= song-8-6 (beer-song/sing 8 6)))
  #_=>   (is (= song-3-0 (beer-song/sing 3))))
  #_=> 
  #_=> (run-tests)\"))
CompilerException java.io.FileNotFoundException: beer_song.clj (No such file or directory), compiling:(null:2:41) 
user=> (ns beer-song-test
  (:require [clojure.test :refer :all]))
(load-file \"beer_song.clj\")
(def verse-8 \"8 bottles of beer on the wall, 8 bottles of beer.\nTake one down and pass it around, 7 bottles of beer on the wall.\n\")
(def verse-2 \"2 bottles of beer on the wall, 2 bottles of beer.\nTake one down and pass it around, 1 bottle of beer on the wall.\n\")
(def verse-1 \"1 bottle of beer on the wall, 1 bottle of beer.\nTake it down and pass it around, no more bottles of beer on the wall.\n\")
(def verse-0 \"No more bottles of beer on the wall, no more bottles of beer.\nGo to the store and buy some more, 99 bottles of beer on the wall.\n\")
(def song-8-6 \"8 bottles of beer on the wall, 8 bottles of beer.\nTake one down and pass it around, 7 bottles of beer on the wall.\n\n7 bottles of beer on the wall, 7 bottles of beer.\nTake one down and pass it around, 6 bottles of beer on the wall.\n\n6 bottles of beer on the wall, 6 bottles of beer.\nTake one down and pass it around, 5 bottles of beer on the wall.\n\")
(def song-3-0 \"3 bottles of beer on the wall, 3 bottles of beer.\nTake one down and pass it around, 2 bottles of beer on the wall.\n\n2 bottles of beer on the wall, 2 bottles of beer.\nTake one down and pass it around, 1 bottle of beer on the wall.\n\n1 bottle of beer on the wall, 1 bottle of beer.\nTake it down and pass it around, no more bottles of beer on the wall.\n\nNo more bottles of beer on the wall, no more bottles of beer.\nGo to the store and buy some more, 99 bottles of beer on the wall.\n\")
(deftest test-verse
  (is (= verse-8 (beer-song/verse 8)))
  (is (= verse-2 (beer-song/verse 2)))
  (is (= verse-1 (beer-song/verse 1)))
  (is (= verse-0 (beer-song/verse 0))))
(deftest test-song
  (is (= song-8-6 (beer-song/sing 8 6)))
  (is (= song-3-0 (beer-song/sing 3))))
(run-tests)")
(binding [*ns* (or (find-ns 'beer-song-test) (find-ns 'user))] (load-string "(ns beer-song-test
  (:require [clojure.test :refer :all]))
(load-file \"beer_song.clj\")
(def verse-8 \"8 bottles of beer on the wall, 8 bottles of beer.\nTake one down and pass it around, 7 bottles of beer on the wall.\n\")
(def verse-2 \"2 bottles of beer on the wall, 2 bottles of beer.\nTake one down and pass it around, 1 bottle of beer on the wall.\n\")
(def verse-1 \"1 bottle of beer on the wall, 1 bottle of beer.\nTake it down and pass it around, no more bottles of beer on the wall.\n\")
(def verse-0 \"No more bottles of beer on the wall, no more bottles of beer.\nGo to the store and buy some more, 99 bottles of beer on the wall.\n\")
(def song-8-6 \"8 bottles of beer on the wall, 8 bottles of beer.\nTake one down and pass it around, 7 bottles of beer on the wall.\n\n7 bottles of beer on the wall, 7 bottles of beer.\nTake one down and pass it around, 6 bottles of beer on the wall.\n\n6 bottles of beer on the wall, 6 bottles of beer.\nTake one down and pass it around, 5 bottles of beer on the wall.\n\")
(def song-3-0 \"3 bottles of beer on the wall, 3 bottles of beer.\nTake one down and pass it around, 2 bottles of beer on the wall.\n\n2 bottles of beer on the wall, 2 bottles of beer.\nTake one down and pass it around, 1 bottle of beer on the wall.\n\n1 bottle of beer on the wall, 1 bottle of beer.\nTake it down and pass it around, no more bottles of beer on the wall.\n\nNo more bottles of beer on the wall, no more bottles of beer.\nGo to the store and buy some more, 99 bottles of beer on the wall.\n\")
(deftest test-verse
  (is (= verse-8 (beer-song/verse 8)))
  (is (= verse-2 (beer-song/verse 2)))
  (is (= verse-1 (beer-song/verse 1)))
  (is (= verse-0 (beer-song/verse 0))))
(deftest test-song
  (is (= song-8-6 (beer-song/sing 8 6)))
  (is (= song-3-0 (beer-song/sing 3))))
(run-tests)"))
(binding [*ns* (or (find-ns 'beer-song-test) (find-ns 'user))] (load-string "(ns beer-song-test
  (:require [clojure.test :refer :all]))
(load-file \"beer_song.clj\")
(def verse-8 \"8 bottles of beer on the wall, 8 bottles of beer.\nTake one down and pass it around, 7 bottles of beer on the wall.\n\")
(def verse-2 \"2 bottles of beer on the wall, 2 bottles of beer.\nTake one down and pass it around, 1 bottle of beer on the wall.\n\")
(def verse-1 \"1 bottle of beer on the wall, 1 bottle of beer.\nTake it down and pass it around, no more bottles of beer on the wall.\n\")
(def verse-0 \"No more bottles of beer on the wall, no more bottles of beer.\nGo to the store and buy some more, 99 bottles of beer on the wall.\n\")
(def song-8-6 \"8 bottles of beer on the wall, 8 bottles of beer.\nTake one down and pass it around, 7 bottles of beer on the wall.\n\n7 bottles of beer on the wall, 7 bottles of beer.\nTake one down and pass it around, 6 bottles of beer on the wall.\n\n6 bottles of beer on the wall, 6 bottles of beer.\nTake one down and pass it around, 5 bottles of beer on the wall.\n\")
(def song-3-0 \"3 bottles of beer on the wall, 3 bottles of beer.\nTake one down and pass it around, 2 bottles of beer on the wall.\n\n2 bottles of beer on the wall, 2 bottles of beer.\nTake one down and pass it around, 1 bottle of beer on the wall.\n\n1 bottle of beer on the wall, 1 bottle of beer.\nTake it down and pass it around, no more bottles of beer on the wall.\n\nNo more bottles of beer on the wall, no more bottles of beer.\nGo to the store and buy some more, 99 bottles of beer on the wall.\n\")
(deftest test-verse
  (is (= verse-8 (beer-song/verse 8)))
  (is (= verse-2 (beer-song/verse 2)))
  (is (= verse-1 (beer-song/verse 1)))
  (is (= verse-0 (beer-song/verse 0))))
(deftest test-song
  (is (= song-8-6 (beer-song/sing 8 6)))
  (is (= song-3-0 (beer-song/sing 3))))
(run-tests)"))
nREPL server started on port 60212 on host 127.0.0.1 - nrepl://127.0.0.1:60212
REPL-y 0.3.5, nREPL 0.2.6
Clojure 1.6.0
Java HotSpot(TM) 64-Bit Server VM 1.8.0_45-b14
    Docs: (doc function-name-here)
          (find-doc "part-of-name-here")
  Source: (source function-name-here)
 Javadoc: (javadoc java-object-or-class-here)
    Exit: Control+D or (exit) or (quit)
 Results: Stored in vars *1, *2, *3, an exception in *e
user=> (binding [*ns* (or (find-ns 'beer-song-test) (find-ns 'user))] (load-stri 
ng "(ns beer-song-test
  #_=>   (:require [clojure.test :refer :all]))
  #_=> 
  #_=> (load-file \"beer_song.clj\")
  #_=> 
  #_=> (def verse-8 \"8 bottles of beer on the wall, 8 bottles of beer.\nTake on 
e down and pass it around, 7 bottles of beer on the wall.\n\")
  #_=> (def verse-2 \"2 bottles of beer on the wall, 2 bottles of beer.\nTake on 
e down and pass it around, 1 bottle of beer on the wall.\n\")
  #_=> (def verse-1 \"1 bottle of beer on the wall, 1 bottle of beer.\nTake it d 
own and pass it around, no more bottles of beer on the wall.\n\")
  #_=> (def verse-0 \"No more bottles of beer on the wall, no more bottles of be 
er.\nGo to the store and buy some more, 99 bottles of beer on the wall.\n\")
  #_=> 
  #_=> (def song-8-6 \"8 bottles of beer on the wall, 8 bottles of beer.\nTake o 
ne down and pass it around, 7 bottles of beer on the wall.\n\n7 bottles of beer  
on the wall, 7 bottles of beer.\nTake one down and pass it around, 6 bottles of  
beer on the wall.\n\n6 bottles of beer on the wall, 6 bottles of beer.\nTake one 
 down and pass it around, 5 bottles of beer on the wall.\n\")
  #_=> (def song-3-0 \"3 bottles of beer on the wall, 3 bottles of beer.\nTake o 
ne down and pass it around, 2 bottles of beer on the wall.\n\n2 bottles of beer  
on the wall, 2 bottles of beer.\nTake one down and pass it around, 1 bottle of b 
eer on the wall.\n\n1 bottle of beer on the wall, 1 bottle of beer.\nTake it dow 
n and pass it around, no more bottles of beer on the wall.\n\nNo more bottles of 
 beer on the wall, no more bottles of beer.\nGo to the store and buy some more,  
99 bottles of beer on the wall.\n\")
  #_=> 
  #_=> (deftest test-verse
  #_=>   (is (= verse-8 (beer-song/verse 8)))
  #_=>   (is (= verse-2 (beer-song/verse 2)))
  #_=>   (is (= verse-1 (beer-song/verse 1)))
  #_=>   (is (= verse-0 (beer-song/verse 0))))
  #_=> 
  #_=> (deftest test-song
  #_=>   (is (= song-8-6 (beer-song/sing 8 6)))
  #_=>   (is (= song-3-0 (beer-song/sing 3))))
  #_=> 
  #_=> (run-tests)"))
CompilerException java.io.FileNotFoundException: beer_song.clj (No such file or directory), compiling:(null:2:41) 
user=> (ns beer-song-test
  (:require [clojure.test :refer :all]))
(load-file "beer_song.clj")
(def verse-8 "8 bottles of beer on the wall, 8 bottles of beer.\nTake one down and pass it around, 7 bottles of beer on the wall.\n")
(def verse-2 "2 bottles of beer on the wall, 2 bottles of beer.\nTake one down and pass it around, 1 bottle of beer on the wall.\n")
(def verse-1 "1 bottle of beer on the wall, 1 bottle of beer.\nTake it down and pass it around, no more bottles of beer on the wall.\n")
(def verse-0 "No more bottles of beer on the wall, no more bottles of beer.\nGo to the store and buy some more, 99 bottles of beer on the wall.\n")
(def song-8-6 "8 bottles of beer on the wall, 8 bottles of beer.\nTake one down and pass it around, 7 bottles of beer on the wall.\n\n7 bottles of beer on the wall, 7 bottles of beer.\nTake one down and pass it around, 6 bottles of beer on the wall.\n\n6 bottles of beer on the wall, 6 bottles of beer.\nTake one down and pass it around, 5 bottles of beer on the wall.\n")
(def song-3-0 "3 bottles of beer on the wall, 3 bottles of beer.\nTake one down and pass it around, 2 bottles of beer on the wall.\n\n2 bottles of beer on the wall, 2 bottles of beer.\nTake one down and pass it around, 1 bottle of beer on the wall.\n\n1 bottle of beer on the wall, 1 bottle of beer.\nTake it down and pass it around, no more bottles of beer on the wall.\n\nNo more bottles of beer on the wall, no more bottles of beer.\nGo to the store and buy some more, 99 bottles of beer on the wall.\n")
(deftest test-verse
  (is (= verse-8 (beer-song/verse 8)))
  (is (= verse-2 (beer-song/verse 2)))
  (is (= verse-1 (beer-song/verse 1)))
  (is (= verse-0 (beer-song/verse 0))))
(deftest test-song
  (is (= song-8-6 (beer-song/sing 8 6)))
  (is (= song-3-0 (beer-song/sing 3))))
(run-tests)
(. System exit 0)
exit
(load-file "beer_song.clj")
(beer-song/sing 2)
(beer-song/verse 2)
(beer-song/sing 3)
(beer-song/sing 8)
(load-file "beer_song_test.clj")
exit
